{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{w3cwebsocket as W3CWebSocket}from\"websocket\";import{useNavigate}from\"react-router-dom\";import{useMessage}from'../../Components/MessageContext';import{jsx as _jsx}from\"react/jsx-runtime\";const WebSocketComponent=()=>{const[isConnecting,setIsConnecting]=useState(true);const{socket,setSocket}=useMessage();const{divs,setDivs}=useMessage();const{USBList,setUSBList}=useMessage();const{ETHList,setETHList}=useMessage();const navigate=useNavigate();const handleAddDiv=text=>{const newDiv=/*#__PURE__*/_jsx(\"div\",{className:\"text3\",children:text},divs.length);setDivs([...divs,newDiv]);// Add the new div to the state\n};const connectWebSocket=()=>{console.log(\"Web\",isConnecting);// if (isConnecting) return;\nsetIsConnecting(true);const newSocket=new W3CWebSocket('ws://'+window.location.hostname+':4000');newSocket.onopen=()=>{console.log(\"WebSocket bağlantısı kuruldu.\");navigate(\"\");setSocket(newSocket);setIsConnecting(false);};newSocket.onmessage=message=>{const jsonData=JSON.parse(message.data.toString());console.log(jsonData);switch(jsonData.Command){case\"USBList\":setUSBList(jsonData.Data);break;case\"ETHList\":setETHList(jsonData.Data);break;case\"USBControl\":handleAddDiv(\"Test Cihazına bağlantı kontrol ediliyor...\");break;// case \"NetworkPriority\":\n//   setNetworkPriority(message.data.toString());\n//   break\n}};newSocket.onerror=error=>{console.error(\"WebSocket hatası:\",error);};newSocket.onclose=()=>{console.log(\"WebSocket bağlantısı kapatıldı.\");setSocket(null);setIsConnecting(false);setTimeout(()=>{connectWebSocket();},1000);};};useEffect(()=>{const fetchData=async()=>{try{console.log(\"connectWebSocket...\");connectWebSocket();}catch(error){console.error(\"Error fetching data:\",error);}};fetchData();return()=>{if(socket){console.log(\"WebSocket bağlantısı kapatıldı.\");socket.close();}};},[]);return/*#__PURE__*/_jsx(\"div\",{});};export default WebSocketComponent;","map":{"version":3,"names":["React","useEffect","useState","w3cwebsocket","W3CWebSocket","useNavigate","useMessage","jsx","_jsx","WebSocketComponent","isConnecting","setIsConnecting","socket","setSocket","divs","setDivs","USBList","setUSBList","ETHList","setETHList","navigate","handleAddDiv","text","newDiv","className","children","length","connectWebSocket","console","log","newSocket","window","location","hostname","onopen","onmessage","message","jsonData","JSON","parse","data","toString","Command","Data","onerror","error","onclose","setTimeout","fetchData","close"],"sources":["C:/Users/syucedag/Desktop/all_projects/sevda/mygit/testApplication/frontend/src/Components/WebSocketComponent/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoadingProduct from \"../../assets/icons/loadingProduct.svg\";\r\nimport { useMessage } from '../../Components/MessageContext';\r\n\r\nconst WebSocketComponent = () => {\r\n  const [isConnecting, setIsConnecting] = useState(true);\r\n  const { socket, setSocket } = useMessage();\r\n  const { divs, setDivs } = useMessage();\r\n  const { USBList, setUSBList } = useMessage();\r\n  const { ETHList, setETHList } = useMessage();\r\n  const navigate = useNavigate();\r\n\r\n  const handleAddDiv = (text:string) => {\r\n    const newDiv = (\r\n      <div className=\"text3\" key={divs.length}>\r\n        {text}\r\n      </div>\r\n    );\r\n    setDivs([...divs, newDiv]); // Add the new div to the state\r\n  };\r\n\r\n  const connectWebSocket = () => {\r\n    console.log(\"Web\", isConnecting)\r\n    // if (isConnecting) return;\r\n\r\n    setIsConnecting(true);\r\n\r\n\r\n    const newSocket = new W3CWebSocket('ws://' + window.location.hostname + ':4000');\r\n\r\n    newSocket.onopen = () => {\r\n      console.log(\"WebSocket bağlantısı kuruldu.\");\r\n      navigate(\"\");\r\n      setSocket(newSocket);\r\n      setIsConnecting(false);\r\n    };\r\n\r\n    newSocket.onmessage = (message) => {\r\n      const jsonData = JSON.parse(message.data.toString());\r\n      console.log(jsonData);\r\n      switch (jsonData.Command) {\r\n        case \"USBList\":\r\n          setUSBList(jsonData.Data)\r\n          break\r\n        case \"ETHList\":\r\n          setETHList(jsonData.Data)\r\n          break\r\n        case \"USBControl\":\r\n          handleAddDiv(\"Test Cihazına bağlantı kontrol ediliyor...\")\r\n          break\r\n\r\n\r\n        // case \"NetworkPriority\":\r\n        //   setNetworkPriority(message.data.toString());\r\n        //   break\r\n\r\n      }\r\n\r\n    };\r\n\r\n    newSocket.onerror = (error) => {\r\n      console.error(\"WebSocket hatası:\", error);\r\n    };\r\n\r\n    newSocket.onclose = () => {\r\n      console.log(\"WebSocket bağlantısı kapatıldı.\");\r\n      setSocket(null);\r\n      setIsConnecting(false);\r\n\r\n      setTimeout(() => {\r\n        connectWebSocket();\r\n      }, 1000);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log(\"connectWebSocket...\")\r\n        connectWebSocket();\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => {\r\n      if (socket) {\r\n        console.log(\"WebSocket bağlantısı kapatıldı.\");\r\n        socket.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}