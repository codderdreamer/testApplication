{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{w3cwebsocket as W3CWebSocket}from\"websocket\";import{useNavigate}from\"react-router-dom\";import{useMessage}from'../../Components/MessageContext';import{jsx as _jsx}from\"react/jsx-runtime\";const WebSocketComponent=()=>{const[isConnecting,setIsConnecting]=useState(true);const navigate=useNavigate();const[waitingForBarcode,setWaitingForBarcode]=useState(false);const[barcode,setBarcode]=useState(\"\");const[timeoutId,setTimeoutId]=useState(null);const{socket,setSocket,USBList,setUSBList,wifiSSID,setwifiSSID,wifiPassword,setwifiPassword,fourG_apn,setfourG_apn,fourG_user,setfourG_user,fourG_password,setfourG_password,fourG_pin,setfourG_pin,items,setItems,containerRef}=useMessage();const handleAddItem=(message,isSuccess)=>{setItems(prevItems=>[...prevItems,{message,isSuccess}]);if(containerRef.current){setTimeout(()=>{containerRef.current.scrollTop=containerRef.current.scrollHeight;},0);}};const handleBarcodeInput=event=>{if(!waitingForBarcode)return;if(event.key===\"Enter\"){handleAddItem(`Cihaz Seri No: ${barcode}`,true);setBarcode(\"\");setWaitingForBarcode(false);if(timeoutId)clearTimeout(timeoutId);}else{setBarcode(prev=>prev+event.key);if(timeoutId)clearTimeout(timeoutId);startTimeout();}};const startTimeout=()=>{if(timeoutId)clearTimeout(timeoutId);// Mevcut zamanlayıcıyı temizle\nconst id=setTimeout(()=>{if(waitingForBarcode){// Yalnızca barkod beklerken hata mesajı ekle\nhandleAddItem(\"Barkod girilmedi. Hata!\",false);setWaitingForBarcode(false);// Barkod beklemeyi sonlandır\nsetBarcode(\"\");// Barkodu sıfırla\n}},10000);// 10 saniye\nsetTimeoutId(id);};useEffect(()=>{if(waitingForBarcode){window.addEventListener(\"keydown\",handleBarcodeInput);startTimeout();}else{window.removeEventListener(\"keydown\",handleBarcodeInput);if(timeoutId)clearTimeout(timeoutId);}return()=>{window.removeEventListener(\"keydown\",handleBarcodeInput);if(timeoutId)clearTimeout(timeoutId);};},[waitingForBarcode,barcode]);const Tick=()=>{return/*#__PURE__*/_jsx(\"img\",{className:\"tick\",src:\"/assets/img/tik.png\",alt:\"\"});};const connectWebSocket=()=>{console.log(\"Web\",isConnecting);setIsConnecting(true);const newSocket=new W3CWebSocket('ws://'+window.location.hostname+':4000');newSocket.onopen=()=>{console.log(\"WebSocket bağlantısı kuruldu.\");navigate(\"\");setSocket(newSocket);setIsConnecting(false);};newSocket.onmessage=message=>{const jsonData=JSON.parse(message.data.toString());console.log(jsonData);switch(jsonData.Command){case\"USBList\":setUSBList(jsonData.Data);break;case\"Config\":if(jsonData.Data){setwifiSSID(jsonData.Data.wifiSSID);setwifiPassword(jsonData.Data.wifiPassword);setfourG_apn(jsonData.Data.fourG_apn);setfourG_user(jsonData.Data.fourG_user);setfourG_password(jsonData.Data.fourG_password);setfourG_pin(jsonData.Data.fourG_pin);}break;case\"USBControl\":if(jsonData.Data){console.log(\"Test cihazına bağlandı\");handleAddItem(\"Test cihazına bağlandı.\",true);handleAddItem(\"Test cihazının hazır olması bekleniyor...\",null);}else{console.log(\"Test cihazına bağlanamadı\");handleAddItem(\"Test cihazına bağlanamadı!.\",false);}break;case\"TestDevice\":if(jsonData.Data){handleAddItem(\"Test cihazı hazır.\",true);handleAddItem(\"Lütfen cihaın seri numara barkodunu okutunuz!\",null);setWaitingForBarcode(true);}}};newSocket.onerror=error=>{console.error(\"WebSocket hatası:\",error);};newSocket.onclose=()=>{console.log(\"WebSocket bağlantısı kapatıldı.\");setSocket(null);setIsConnecting(false);setTimeout(()=>{connectWebSocket();},1000);};};useEffect(()=>{const fetchData=async()=>{try{console.log(\"connectWebSocket...\");connectWebSocket();}catch(error){console.error(\"Error fetching data:\",error);}};fetchData();return()=>{if(socket){console.log(\"WebSocket bağlantısı kapatıldı.\");socket.close();}};},[]);return/*#__PURE__*/_jsx(\"div\",{});};export default WebSocketComponent;","map":{"version":3,"names":["React","useEffect","useState","w3cwebsocket","W3CWebSocket","useNavigate","useMessage","jsx","_jsx","WebSocketComponent","isConnecting","setIsConnecting","navigate","waitingForBarcode","setWaitingForBarcode","barcode","setBarcode","timeoutId","setTimeoutId","socket","setSocket","USBList","setUSBList","wifiSSID","setwifiSSID","wifiPassword","setwifiPassword","fourG_apn","setfourG_apn","fourG_user","setfourG_user","fourG_password","setfourG_password","fourG_pin","setfourG_pin","items","setItems","containerRef","handleAddItem","message","isSuccess","prevItems","current","setTimeout","scrollTop","scrollHeight","handleBarcodeInput","event","key","clearTimeout","prev","startTimeout","id","window","addEventListener","removeEventListener","Tick","className","src","alt","connectWebSocket","console","log","newSocket","location","hostname","onopen","onmessage","jsonData","JSON","parse","data","toString","Command","Data","onerror","error","onclose","fetchData","close"],"sources":["C:/Users/syucedag/Desktop/all_projects/sevda/mygit/testApplication/frontend/src/Components/WebSocketComponent/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoadingProduct from \"../../assets/icons/loadingProduct.svg\";\r\nimport { useMessage } from '../../Components/MessageContext';\r\n\r\ninterface Item {\r\n  message: string;\r\n  isSuccess: boolean | null;\r\n}\r\n\r\nconst WebSocketComponent = () => {\r\n  const [isConnecting, setIsConnecting] = useState(true);\r\n  const navigate = useNavigate();\r\n  const [waitingForBarcode, setWaitingForBarcode] = useState(false);\r\n  const [barcode, setBarcode] = useState(\"\");\r\n  const [timeoutId, setTimeoutId] = useState<NodeJS.Timeout | null>(null);\r\n\r\n  const {\r\n    socket,\r\n    setSocket,\r\n    USBList,\r\n    setUSBList,\r\n    wifiSSID,\r\n    setwifiSSID,\r\n    wifiPassword,\r\n    setwifiPassword,\r\n    fourG_apn,\r\n    setfourG_apn,\r\n    fourG_user,\r\n    setfourG_user,\r\n    fourG_password,\r\n    setfourG_password,\r\n    fourG_pin,\r\n    setfourG_pin,\r\n    items,\r\n    setItems,\r\n    containerRef,\r\n  } = useMessage();\r\n\r\n  const handleAddItem = (message: string, isSuccess: boolean | null) => {\r\n    setItems((prevItems: Item[]) => [\r\n      ...prevItems, \r\n      { message, isSuccess }, \r\n    ]);\r\n\r\n    if (containerRef.current) {\r\n      setTimeout(() => {\r\n        containerRef.current!.scrollTop = containerRef.current!.scrollHeight;\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  const handleBarcodeInput = (event: KeyboardEvent) => {\r\n    if (!waitingForBarcode) return;\r\n\r\n    if (event.key === \"Enter\") {\r\n      handleAddItem(`Cihaz Seri No: ${barcode}`, true);\r\n      setBarcode(\"\"); \r\n      setWaitingForBarcode(false); \r\n      if (timeoutId) clearTimeout(timeoutId);\r\n    } else {\r\n      setBarcode((prev) => prev + event.key);\r\n      if (timeoutId) clearTimeout(timeoutId);\r\n      startTimeout();\r\n    }\r\n  };\r\n\r\n  const startTimeout = () => {\r\n    if (timeoutId) clearTimeout(timeoutId); // Mevcut zamanlayıcıyı temizle\r\n\r\n    const id = setTimeout(() => {\r\n      if (waitingForBarcode) { // Yalnızca barkod beklerken hata mesajı ekle\r\n        handleAddItem(\"Barkod girilmedi. Hata!\", false);\r\n        setWaitingForBarcode(false); // Barkod beklemeyi sonlandır\r\n        setBarcode(\"\"); // Barkodu sıfırla\r\n      }\r\n    }, 10000); // 10 saniye\r\n\r\n    setTimeoutId(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (waitingForBarcode) {\r\n      window.addEventListener(\"keydown\", handleBarcodeInput);\r\n      startTimeout();\r\n    } else {\r\n      window.removeEventListener(\"keydown\", handleBarcodeInput);\r\n      if (timeoutId) clearTimeout(timeoutId); \r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleBarcodeInput);\r\n      if (timeoutId) clearTimeout(timeoutId);\r\n    };\r\n  }, [waitingForBarcode, barcode]);\r\n\r\n\r\n  const Tick = () => {\r\n    return <img className=\"tick\" src=\"/assets/img/tik.png\" alt=\"\" />\r\n  };\r\n\r\n  const connectWebSocket = () => {\r\n    console.log(\"Web\", isConnecting)\r\n    setIsConnecting(true);\r\n    const newSocket = new W3CWebSocket('ws://' + window.location.hostname + ':4000');\r\n\r\n    newSocket.onopen = () => {\r\n      console.log(\"WebSocket bağlantısı kuruldu.\");\r\n      navigate(\"\");\r\n      setSocket(newSocket);\r\n      setIsConnecting(false);\r\n    };\r\n\r\n    newSocket.onmessage = (message) => {\r\n      const jsonData = JSON.parse(message.data.toString());\r\n      console.log(jsonData);\r\n      switch (jsonData.Command) {\r\n        case \"USBList\":\r\n          setUSBList(jsonData.Data)\r\n          break\r\n        case \"Config\":\r\n          if (jsonData.Data) {\r\n            setwifiSSID(jsonData.Data.wifiSSID)\r\n            setwifiPassword(jsonData.Data.wifiPassword)\r\n            setfourG_apn(jsonData.Data.fourG_apn)\r\n            setfourG_user(jsonData.Data.fourG_user)\r\n            setfourG_password(jsonData.Data.fourG_password)\r\n            setfourG_pin(jsonData.Data.fourG_pin)\r\n          }\r\n          break\r\n        case \"USBControl\":\r\n          if (jsonData.Data) {\r\n            console.log(\"Test cihazına bağlandı\")\r\n            handleAddItem(\"Test cihazına bağlandı.\", true)\r\n            handleAddItem(\"Test cihazının hazır olması bekleniyor...\", null)\r\n          }\r\n          else {\r\n            console.log(\"Test cihazına bağlanamadı\")\r\n            handleAddItem(\"Test cihazına bağlanamadı!.\", false)\r\n          }\r\n          break\r\n        case \"TestDevice\":\r\n          if (jsonData.Data) {\r\n            handleAddItem(\"Test cihazı hazır.\", true)\r\n            handleAddItem(\"Lütfen cihaın seri numara barkodunu okutunuz!\", null);\r\n            setWaitingForBarcode(true);\r\n            \r\n          }\r\n      }\r\n    };\r\n\r\n    newSocket.onerror = (error) => {\r\n      console.error(\"WebSocket hatası:\", error);\r\n    };\r\n\r\n    newSocket.onclose = () => {\r\n      console.log(\"WebSocket bağlantısı kapatıldı.\");\r\n      setSocket(null);\r\n      setIsConnecting(false);\r\n\r\n      setTimeout(() => {\r\n        connectWebSocket();\r\n      }, 1000);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log(\"connectWebSocket...\")\r\n        connectWebSocket();\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => {\r\n      if (socket) {\r\n        console.log(\"WebSocket bağlantısı kapatıldı.\");\r\n        socket.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}