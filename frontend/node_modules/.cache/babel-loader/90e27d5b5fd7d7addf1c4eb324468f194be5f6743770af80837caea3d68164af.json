{"ast":null,"code":"import React,{useRef,createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const MessageContext=/*#__PURE__*/createContext(undefined);export const MessageProvider=_ref=>{let{children}=_ref;const[socket,setSocket]=useState(null);const[USBList,setUSBList]=useState([]);const[wifiSSID,setwifiSSID]=useState(\"\");const[wifiPassword,setwifiPassword]=useState(\"\");const[fourG_apn,setfourG_apn]=useState(\"\");const[fourG_user,setfourG_user]=useState(\"\");const[fourG_password,setfourG_password]=useState(\"\");const[fourG_pin,setfourG_pin]=useState(\"\");const[items,setItems]=useState([]);const containerRef=useRef(null);// const [networkjsonString, setNetworkPriority] = useState<string | null>(null);\nreturn/*#__PURE__*/_jsx(MessageContext.Provider,{value:{socket,setSocket,USBList,setUSBList,wifiSSID,setwifiSSID,wifiPassword,setwifiPassword,fourG_apn,setfourG_apn,fourG_user,setfourG_user,fourG_password,setfourG_password,fourG_pin,setfourG_pin,items,setItems,containerRef},children:children});};export const useMessage=()=>{const context=useContext(MessageContext);if(context===undefined){throw new Error('useMessage must be used within a MessageProvider');}return context;};","map":{"version":3,"names":["React","useRef","createContext","useContext","useState","jsx","_jsx","MessageContext","undefined","MessageProvider","_ref","children","socket","setSocket","USBList","setUSBList","wifiSSID","setwifiSSID","wifiPassword","setwifiPassword","fourG_apn","setfourG_apn","fourG_user","setfourG_user","fourG_password","setfourG_password","fourG_pin","setfourG_pin","items","setItems","containerRef","Provider","value","useMessage","context","Error"],"sources":["C:/Users/syucedag/Desktop/all_projects/sevda/mygit/testApplication/frontend/src/Components/MessageContext/index.tsx"],"sourcesContent":["import React, {useRef, createContext, useContext, useState, ReactNode } from 'react';\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\ninterface Item {\r\n  message: string;\r\n  isSuccess: boolean | null;\r\n}\r\n\r\ninterface MessageContextType {\r\n  socket: W3CWebSocket | null;\r\n  setSocket: (socket: W3CWebSocket | null) => void;\r\n\r\n  USBList: string[];\r\n  setUSBList: (USBList: string[]) => void;\r\n\r\n  wifiSSID: string;\r\n  setwifiSSID: (wifiSSID: string) => void;\r\n\r\n  wifiPassword: string;\r\n  setwifiPassword: (wifiPassword: string) => void;\r\n\r\n  fourG_apn: string;\r\n  setfourG_apn: (fourG_apn: string) => void;\r\n\r\n  fourG_user: string;\r\n  setfourG_user: (fourG_user: string) => void;\r\n\r\n  fourG_password: string;\r\n  setfourG_password: (fourG_password: string) => void;\r\n\r\n  fourG_pin: string;\r\n  setfourG_pin: (fourG_pin: string) => void;\r\n\r\n  items: Item[];\r\n  setItems: (items: Item[]) => void;\r\n\r\n  containerRef: React.RefObject<HTMLDivElement>;\r\n\r\n\r\n  // networkjsonString: string | null;\r\n  // setNetworkPriority:(networkjsonString: string | null) => void;\r\n  \r\n}\r\n\r\nconst MessageContext = createContext<MessageContextType | undefined>(undefined);\r\n\r\ninterface MessageProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const MessageProvider: React.FC<MessageProviderProps> = ({ children }) => {\r\n  const [socket, setSocket] = useState<W3CWebSocket | null>(null);\r\n  const [USBList, setUSBList] = useState<string[]>([]);\r\n  const [wifiSSID, setwifiSSID] = useState<string>(\"\");\r\n  const [wifiPassword, setwifiPassword] = useState<string>(\"\");\r\n  const [fourG_apn, setfourG_apn] = useState<string>(\"\");\r\n  const [fourG_user, setfourG_user] = useState<string>(\"\");\r\n  const [fourG_password, setfourG_password] = useState<string>(\"\");\r\n  const [fourG_pin, setfourG_pin] = useState<string>(\"\");\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // const [networkjsonString, setNetworkPriority] = useState<string | null>(null);\r\n  \r\n\r\n  return (\r\n    <MessageContext.Provider value={{socket, setSocket, \r\n                                    USBList, setUSBList,\r\n                                    wifiSSID, setwifiSSID,\r\n                                    wifiPassword, setwifiPassword,\r\n                                    fourG_apn, setfourG_apn,\r\n                                    fourG_user, setfourG_user,\r\n                                    fourG_password, setfourG_password,\r\n                                    fourG_pin, setfourG_pin,\r\n                                    items,setItems,\r\n                                    containerRef\r\n    }}>\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMessage = () => {\r\n  const context = useContext(MessageContext);\r\n  if (context === undefined) {\r\n    throw new Error('useMessage must be used within a MessageProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,MAAM,CAAEC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBA4CrF,KAAM,CAAAC,cAAc,cAAGL,aAAa,CAAiCM,SAAS,CAAC,CAM/E,MAAO,MAAM,CAAAC,eAA+C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1E,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAsB,IAAI,CAAC,CAC/D,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAW,EAAE,CAAC,CACpD,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAS,EAAE,CAAC,CACpD,KAAM,CAACc,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAS,EAAE,CAAC,CAC5D,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAS,EAAE,CAAC,CACtD,KAAM,CAACkB,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAS,EAAE,CAAC,CACxD,KAAM,CAACoB,cAAc,CAAEC,iBAAiB,CAAC,CAAGrB,QAAQ,CAAS,EAAE,CAAC,CAChE,KAAM,CAACsB,SAAS,CAAEC,YAAY,CAAC,CAAGvB,QAAQ,CAAS,EAAE,CAAC,CACtD,KAAM,CAACwB,KAAK,CAAEC,QAAQ,CAAC,CAAGzB,QAAQ,CAAS,EAAE,CAAC,CAC9C,KAAM,CAAA0B,YAAY,CAAG7B,MAAM,CAAiB,IAAI,CAAC,CAEjD;AAGA,mBACEK,IAAA,CAACC,cAAc,CAACwB,QAAQ,EAACC,KAAK,CAAE,CAACpB,MAAM,CAAEC,SAAS,CAClBC,OAAO,CAAEC,UAAU,CACnBC,QAAQ,CAAEC,WAAW,CACrBC,YAAY,CAAEC,eAAe,CAC7BC,SAAS,CAAEC,YAAY,CACvBC,UAAU,CAAEC,aAAa,CACzBC,cAAc,CAAEC,iBAAiB,CACjCC,SAAS,CAAEC,YAAY,CACvBC,KAAK,CAACC,QAAQ,CACdC,YAChC,CAAE,CAAAnB,QAAA,CACCA,QAAQ,CACc,CAAC,CAE9B,CAAC,CAED,MAAO,MAAM,CAAAsB,UAAU,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,OAAO,CAAG/B,UAAU,CAACI,cAAc,CAAC,CAC1C,GAAI2B,OAAO,GAAK1B,SAAS,CAAE,CACzB,KAAM,IAAI,CAAA2B,KAAK,CAAC,kDAAkD,CAAC,CACrE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}