{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{w3cwebsocket as W3CWebSocket}from\"websocket\";import{useNavigate}from\"react-router-dom\";import{useMessage}from'../../Components/MessageContext';import{jsx as _jsx}from\"react/jsx-runtime\";const WebSocketComponent=()=>{const[isConnecting,setIsConnecting]=useState(true);const{socket,setSocket}=useMessage();const{networkjsonString,setNetworkPriority}=useMessage();const{fourGSettingsString,setfourGSettingsString}=useMessage();const{ethernetSettingsString,setethernetSettingsString}=useMessage();const{DNSSettingsString,setDNSSettingsString}=useMessage();const{WifiSettingsString,setWifiSettingsString}=useMessage();const{OcppSettingsString,setOcppSettingsString}=useMessage();const{FunctionsSettingsString,setFunctionsSettingsString}=useMessage();const{TimeZoneSettingsString,setTimeZoneSettingsString}=useMessage();const{BluetoothSettingsString,setBluetoothSettings}=useMessage();const{GetVersionString,setGetVersionString}=useMessage();const{ChargingString,setChargingString}=useMessage();const{DeviceStatusString,setDeviceStatusString}=useMessage();const{ACCurrentString,setACCurrentString}=useMessage();const{MidMeterString,setMidMeterString}=useMessage();const navigate=useNavigate();const connectWebSocket=()=>{console.log(\"Web\",isConnecting);// if (isConnecting) return;\nsetIsConnecting(true);// const newSocket = new W3CWebSocket('ws://' + \"100.103.66.88\" + ':8000');\nconst newSocket=new W3CWebSocket('ws://'+window.location.hostname+':8000');newSocket.onopen=()=>{console.log(\"WebSocket bağlantısı kuruldu.\");navigate(\"\");setSocket(newSocket);setIsConnecting(false);};newSocket.onmessage=message=>{const jsonData=JSON.parse(message.data.toString());console.log(jsonData);switch(jsonData.Command){case\"NetworkPriority\":setNetworkPriority(message.data.toString());break;case\"4GSettings\":setfourGSettingsString(message.data.toString());break;case\"EthernetSettings\":setethernetSettingsString(message.data.toString());break;case\"DNSSettings\":setDNSSettingsString(message.data.toString());break;case\"WifiSettings\":setWifiSettingsString(message.data.toString());break;case\"OcppSettings\":setOcppSettingsString(message.data.toString());break;case\"FunctionsEnable\":setFunctionsSettingsString(message.data.toString());break;case\"BluetoothSettings\":setBluetoothSettings(message.data.toString());break;case\"TimeZoneSettings\":setTimeZoneSettingsString(message.data.toString());break;case\"FirmwareVersion\":setGetVersionString(message.data.toString());break;case\"Charging\":setChargingString(message.data.toString());break;case\"DeviceStatus\":setDeviceStatusString(message.data.toString());break;case\"ACCurrent\":setACCurrentString(message.data.toString());break;case\"MidMeter\":setMidMeterString(message.data.toString());}};newSocket.onerror=error=>{console.error(\"WebSocket hatası:\",error);};newSocket.onclose=()=>{console.log(\"WebSocket bağlantısı kapatıldı.\");setSocket(null);setIsConnecting(false);setTimeout(()=>{connectWebSocket();},1000);};};useEffect(()=>{const fetchData=async()=>{try{console.log(\"connectWebSocket...\");connectWebSocket();}catch(error){console.error(\"Error fetching data:\",error);}};fetchData();return()=>{if(socket){console.log(\"WebSocket bağlantısı kapatıldı.\");socket.close();}};},[]);return/*#__PURE__*/_jsx(\"div\",{});};export default WebSocketComponent;","map":{"version":3,"names":["React","useEffect","useState","w3cwebsocket","W3CWebSocket","useNavigate","useMessage","jsx","_jsx","WebSocketComponent","isConnecting","setIsConnecting","socket","setSocket","networkjsonString","setNetworkPriority","fourGSettingsString","setfourGSettingsString","ethernetSettingsString","setethernetSettingsString","DNSSettingsString","setDNSSettingsString","WifiSettingsString","setWifiSettingsString","OcppSettingsString","setOcppSettingsString","FunctionsSettingsString","setFunctionsSettingsString","TimeZoneSettingsString","setTimeZoneSettingsString","BluetoothSettingsString","setBluetoothSettings","GetVersionString","setGetVersionString","ChargingString","setChargingString","DeviceStatusString","setDeviceStatusString","ACCurrentString","setACCurrentString","MidMeterString","setMidMeterString","navigate","connectWebSocket","console","log","newSocket","window","location","hostname","onopen","onmessage","message","jsonData","JSON","parse","data","toString","Command","onerror","error","onclose","setTimeout","fetchData","close"],"sources":["C:/Users/syucedag/Desktop/all_projects/sevda/mygit/testApplication/frontend/src/Components/WebSocketComponent/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoadingProduct from \"../../assets/icons/loadingProduct.svg\";\r\nimport {useMessage} from '../../Components/MessageContext';\r\n\r\nconst WebSocketComponent = () => {\r\n  const [isConnecting, setIsConnecting] = useState(true);\r\n  const { socket, setSocket } = useMessage();\r\n  const { networkjsonString, setNetworkPriority } = useMessage();\r\n  const { fourGSettingsString, setfourGSettingsString } = useMessage();\r\n  const { ethernetSettingsString, setethernetSettingsString } = useMessage();\r\n  const { DNSSettingsString, setDNSSettingsString } = useMessage();\r\n  const { WifiSettingsString, setWifiSettingsString } = useMessage();\r\n  const { OcppSettingsString, setOcppSettingsString } = useMessage();\r\n  const { FunctionsSettingsString, setFunctionsSettingsString } = useMessage();\r\n  const { TimeZoneSettingsString, setTimeZoneSettingsString } = useMessage();\r\n  const { BluetoothSettingsString, setBluetoothSettings } = useMessage();\r\n  const { GetVersionString, setGetVersionString } = useMessage();\r\n  const { ChargingString, setChargingString } = useMessage();\r\n  const { DeviceStatusString, setDeviceStatusString } = useMessage();\r\n  const { ACCurrentString, setACCurrentString } = useMessage();\r\n  const { MidMeterString, setMidMeterString } = useMessage();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const connectWebSocket = () => {\r\n    console.log(\"Web\", isConnecting)\r\n    // if (isConnecting) return;\r\n\r\n    setIsConnecting(true);\r\n\r\n    // const newSocket = new W3CWebSocket('ws://' + \"100.103.66.88\" + ':8000');\r\n\r\n    const newSocket = new W3CWebSocket('ws://' + window.location.hostname + ':8000');\r\n\r\n    newSocket.onopen = () => {\r\n      console.log(\"WebSocket bağlantısı kuruldu.\");\r\n      navigate(\"\");\r\n      setSocket(newSocket);\r\n      setIsConnecting(false);\r\n    };\r\n\r\n    newSocket.onmessage = (message) => {\r\n      const jsonData = JSON.parse(message.data.toString());\r\n      console.log(jsonData);\r\n      switch (jsonData.Command) {\r\n        case \"NetworkPriority\":\r\n          setNetworkPriority(message.data.toString());\r\n          break\r\n        case \"4GSettings\":\r\n          setfourGSettingsString(message.data.toString());\r\n          break\r\n        case \"EthernetSettings\":\r\n          setethernetSettingsString(message.data.toString());\r\n          break\r\n        case \"DNSSettings\":\r\n          setDNSSettingsString(message.data.toString());\r\n          break;\r\n        case \"WifiSettings\":\r\n          setWifiSettingsString(message.data.toString());\r\n          break;\r\n        case \"OcppSettings\":\r\n          setOcppSettingsString(message.data.toString());\r\n          break;\r\n        case \"FunctionsEnable\":\r\n          setFunctionsSettingsString(message.data.toString());\r\n          break;\r\n        case \"BluetoothSettings\":\r\n          setBluetoothSettings(message.data.toString());\r\n          break;\r\n        case \"TimeZoneSettings\":\r\n          setTimeZoneSettingsString(message.data.toString());\r\n          break;\r\n        case \"FirmwareVersion\":\r\n          setGetVersionString(message.data.toString());\r\n          break;\r\n        case \"Charging\":\r\n          setChargingString(message.data.toString())\r\n          break;\r\n        case \"DeviceStatus\":\r\n          setDeviceStatusString(message.data.toString())\r\n          break;\r\n        case \"ACCurrent\":\r\n          setACCurrentString(message.data.toString())\r\n          break;\r\n        case \"MidMeter\":\r\n          setMidMeterString(message.data.toString())\r\n        }\r\n    \r\n    };\r\n\r\n    newSocket.onerror = (error) => {\r\n      console.error(\"WebSocket hatası:\", error);\r\n    };\r\n\r\n    newSocket.onclose = () => {\r\n      console.log(\"WebSocket bağlantısı kapatıldı.\");\r\n      setSocket(null);\r\n      setIsConnecting(false);\r\n\r\n      setTimeout(() => {\r\n        connectWebSocket();\r\n      }, 1000);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log(\"connectWebSocket...\")\r\n        connectWebSocket();\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => {\r\n      if (socket) {\r\n        console.log(\"WebSocket bağlantısı kapatıldı.\");\r\n        socket.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}