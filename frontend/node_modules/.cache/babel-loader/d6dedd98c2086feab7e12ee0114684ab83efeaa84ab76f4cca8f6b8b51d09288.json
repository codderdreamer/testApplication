{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const MessageContext=/*#__PURE__*/createContext(undefined);export const MessageProvider=_ref=>{let{children}=_ref;const[socket,setSocket]=useState(null);const[USBList,setUSBList]=useState([]);const[divs,setDivs]=useState([]);const[wifiSSID,setwifiSSID]=useState(null);const[wifiPassword,setwifiPassword]=useState(null);const[fourG_apn,setfourG_apn]=useState(null);const[fourG_user,setfourG_user]=useState(null);const[fourG_password,setfourG_password]=useState(null);const[fourG_pin,setfourG_pin]=useState(null);// const [networkjsonString, setNetworkPriority] = useState<string | null>(null);\nreturn/*#__PURE__*/_jsx(MessageContext.Provider,{value:{socket,setSocket,USBList,setUSBList,divs,setDivs,wifiSSID,setwifiSSID,wifiPassword,setwifiPassword,fourG_apn,setfourG_apn,fourG_user,setfourG_user,fourG_password,setfourG_password,fourG_pin,setfourG_pin},children:children});};export const useMessage=()=>{const context=useContext(MessageContext);if(context===undefined){throw new Error('useMessage must be used within a MessageProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","MessageContext","undefined","MessageProvider","_ref","children","socket","setSocket","USBList","setUSBList","divs","setDivs","wifiSSID","setwifiSSID","wifiPassword","setwifiPassword","fourG_apn","setfourG_apn","fourG_user","setfourG_user","fourG_password","setfourG_password","fourG_pin","setfourG_pin","Provider","value","useMessage","context","Error"],"sources":["C:/Users/syucedag/Desktop/all_projects/sevda/mygit/testApplication/frontend/src/Components/MessageContext/index.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\n\r\ninterface MessageContextType {\r\n  socket: W3CWebSocket | null;\r\n  setSocket: (socket: W3CWebSocket | null) => void;\r\n\r\n  USBList: string[];\r\n  setUSBList: (USBList: string[]) => void;\r\n\r\n  divs: JSX.Element[]\r\n  setDivs :(divs: JSX.Element[]) => void;\r\n\r\n  wifiSSID: string | null;\r\n  setwifiSSID: (wifiSSID: string) => void;\r\n\r\n  wifiPassword: string | null;\r\n  setwifiPassword: (wifiPassword: string) => void;\r\n\r\n  fourG_apn: string | null;\r\n  setfourG_apn: (fourG_apn: string) => void;\r\n\r\n  fourG_user: string | null;\r\n  setfourG_user: (fourG_user: string) => void;\r\n\r\n  fourG_password: string | null;\r\n  setfourG_password: (fourG_password: string) => void;\r\n\r\n  fourG_pin: string | null;\r\n  setfourG_pin: (fourG_pin: string) => void;\r\n\r\n\r\n  // networkjsonString: string | null;\r\n  // setNetworkPriority:(networkjsonString: string | null) => void;\r\n  \r\n}\r\n\r\nconst MessageContext = createContext<MessageContextType | undefined>(undefined);\r\n\r\ninterface MessageProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const MessageProvider: React.FC<MessageProviderProps> = ({ children }) => {\r\n  const [socket, setSocket] = useState<W3CWebSocket | null>(null);\r\n  const [USBList, setUSBList] = useState<string[]>([]);\r\n  const [divs, setDivs] = useState<JSX.Element[]>([]);\r\n  const [wifiSSID, setwifiSSID] = useState<string | null>(null);\r\n  const [wifiPassword, setwifiPassword] = useState<string | null>(null);\r\n  const [fourG_apn, setfourG_apn] = useState<string | null>(null);\r\n  const [fourG_user, setfourG_user] = useState<string | null>(null);\r\n  const [fourG_password, setfourG_password] = useState<string | null>(null);\r\n  const [fourG_pin, setfourG_pin] = useState<string | null>(null);\r\n\r\n  // const [networkjsonString, setNetworkPriority] = useState<string | null>(null);\r\n  \r\n\r\n  return (\r\n    <MessageContext.Provider value={{socket, setSocket, \r\n                                    USBList, setUSBList,\r\n                                    divs, setDivs,\r\n                                    wifiSSID, setwifiSSID,\r\n                                    wifiPassword, setwifiPassword,\r\n                                    fourG_apn, setfourG_apn,\r\n                                    fourG_user, setfourG_user,\r\n                                    fourG_password, setfourG_password,\r\n                                    fourG_pin, setfourG_pin\r\n    }}>\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMessage = () => {\r\n  const context = useContext(MessageContext);\r\n  if (context === undefined) {\r\n    throw new Error('useMessage must be used within a MessageProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAsC9E,KAAM,CAAAC,cAAc,cAAGL,aAAa,CAAiCM,SAAS,CAAC,CAM/E,MAAO,MAAM,CAAAC,eAA+C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1E,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAsB,IAAI,CAAC,CAC/D,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAW,EAAE,CAAC,CACpD,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAgB,EAAE,CAAC,CACnD,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAgB,IAAI,CAAC,CAC7D,KAAM,CAACgB,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAgB,IAAI,CAAC,CACrE,KAAM,CAACkB,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAgB,IAAI,CAAC,CAC/D,KAAM,CAACoB,UAAU,CAAEC,aAAa,CAAC,CAAGrB,QAAQ,CAAgB,IAAI,CAAC,CACjE,KAAM,CAACsB,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,QAAQ,CAAgB,IAAI,CAAC,CACzE,KAAM,CAACwB,SAAS,CAAEC,YAAY,CAAC,CAAGzB,QAAQ,CAAgB,IAAI,CAAC,CAE/D;AAGA,mBACEE,IAAA,CAACC,cAAc,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAACnB,MAAM,CAAEC,SAAS,CAClBC,OAAO,CAAEC,UAAU,CACnBC,IAAI,CAAEC,OAAO,CACbC,QAAQ,CAAEC,WAAW,CACrBC,YAAY,CAAEC,eAAe,CAC7BC,SAAS,CAAEC,YAAY,CACvBC,UAAU,CAAEC,aAAa,CACzBC,cAAc,CAAEC,iBAAiB,CACjCC,SAAS,CAAEC,YAC3C,CAAE,CAAAlB,QAAA,CACCA,QAAQ,CACc,CAAC,CAE9B,CAAC,CAED,MAAO,MAAM,CAAAqB,UAAU,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,OAAO,CAAG9B,UAAU,CAACI,cAAc,CAAC,CAC1C,GAAI0B,OAAO,GAAKzB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAA0B,KAAK,CAAC,kDAAkD,CAAC,CACrE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}