{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\syucedag\\\\Desktop\\\\all_projects\\\\sevda\\\\mygit\\\\testApplication\\\\frontend\\\\src\\\\Components\\\\WebSocketComponent\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from '../../Components/MessageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const [isConnecting, setIsConnecting] = useState(true);\n  const {\n    socket,\n    setSocket\n  } = useMessage();\n  const {\n    networkjsonString,\n    setNetworkPriority\n  } = useMessage();\n  const {\n    fourGSettingsString,\n    setfourGSettingsString\n  } = useMessage();\n  const {\n    ethernetSettingsString,\n    setethernetSettingsString\n  } = useMessage();\n  const {\n    DNSSettingsString,\n    setDNSSettingsString\n  } = useMessage();\n  const {\n    WifiSettingsString,\n    setWifiSettingsString\n  } = useMessage();\n  const {\n    OcppSettingsString,\n    setOcppSettingsString\n  } = useMessage();\n  const {\n    FunctionsSettingsString,\n    setFunctionsSettingsString\n  } = useMessage();\n  const {\n    TimeZoneSettingsString,\n    setTimeZoneSettingsString\n  } = useMessage();\n  const {\n    BluetoothSettingsString,\n    setBluetoothSettings\n  } = useMessage();\n  const {\n    GetVersionString,\n    setGetVersionString\n  } = useMessage();\n  const {\n    ChargingString,\n    setChargingString\n  } = useMessage();\n  const {\n    DeviceStatusString,\n    setDeviceStatusString\n  } = useMessage();\n  const {\n    ACCurrentString,\n    setACCurrentString\n  } = useMessage();\n  const {\n    MidMeterString,\n    setMidMeterString\n  } = useMessage();\n  const navigate = useNavigate();\n  const connectWebSocket = () => {\n    console.log(\"Web\", isConnecting);\n    // if (isConnecting) return;\n\n    setIsConnecting(true);\n\n    // const newSocket = new W3CWebSocket('ws://' + \"100.103.66.88\" + ':8000');\n\n    const newSocket = new W3CWebSocket('ws://' + window.location.hostname + ':8000');\n    newSocket.onopen = () => {\n      console.log(\"WebSocket bağlantısı kuruldu.\");\n      navigate(\"\");\n      setSocket(newSocket);\n      setIsConnecting(false);\n    };\n    newSocket.onmessage = message => {\n      const jsonData = JSON.parse(message.data.toString());\n      console.log(jsonData);\n      switch (jsonData.Command) {\n        case \"NetworkPriority\":\n          setNetworkPriority(message.data.toString());\n          break;\n        case \"4GSettings\":\n          setfourGSettingsString(message.data.toString());\n          break;\n        case \"EthernetSettings\":\n          setethernetSettingsString(message.data.toString());\n          break;\n        case \"DNSSettings\":\n          setDNSSettingsString(message.data.toString());\n          break;\n        case \"WifiSettings\":\n          setWifiSettingsString(message.data.toString());\n          break;\n        case \"OcppSettings\":\n          setOcppSettingsString(message.data.toString());\n          break;\n        case \"FunctionsEnable\":\n          setFunctionsSettingsString(message.data.toString());\n          break;\n        case \"BluetoothSettings\":\n          setBluetoothSettings(message.data.toString());\n          break;\n        case \"TimeZoneSettings\":\n          setTimeZoneSettingsString(message.data.toString());\n          break;\n        case \"FirmwareVersion\":\n          setGetVersionString(message.data.toString());\n          break;\n        case \"Charging\":\n          setChargingString(message.data.toString());\n          break;\n        case \"DeviceStatus\":\n          setDeviceStatusString(message.data.toString());\n          break;\n        case \"ACCurrent\":\n          setACCurrentString(message.data.toString());\n          break;\n        case \"MidMeter\":\n          setMidMeterString(message.data.toString());\n      }\n    };\n    newSocket.onerror = error => {\n      console.error(\"WebSocket hatası:\", error);\n    };\n    newSocket.onclose = () => {\n      console.log(\"WebSocket bağlantısı kapatıldı.\");\n      setSocket(null);\n      setIsConnecting(false);\n      setTimeout(() => {\n        connectWebSocket();\n      }, 1000);\n    };\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"connectWebSocket...\");\n        connectWebSocket();\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    return () => {\n      if (socket) {\n        console.log(\"WebSocket bağlantısı kapatıldı.\");\n        socket.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n};\n_s(WebSocketComponent, \"SBAbZawbJKspdp+k+wRAIslKFhU=\", false, function () {\n  return [useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useMessage, useNavigate];\n});\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","w3cwebsocket","W3CWebSocket","useNavigate","useMessage","jsxDEV","_jsxDEV","WebSocketComponent","_s","isConnecting","setIsConnecting","socket","setSocket","networkjsonString","setNetworkPriority","fourGSettingsString","setfourGSettingsString","ethernetSettingsString","setethernetSettingsString","DNSSettingsString","setDNSSettingsString","WifiSettingsString","setWifiSettingsString","OcppSettingsString","setOcppSettingsString","FunctionsSettingsString","setFunctionsSettingsString","TimeZoneSettingsString","setTimeZoneSettingsString","BluetoothSettingsString","setBluetoothSettings","GetVersionString","setGetVersionString","ChargingString","setChargingString","DeviceStatusString","setDeviceStatusString","ACCurrentString","setACCurrentString","MidMeterString","setMidMeterString","navigate","connectWebSocket","console","log","newSocket","window","location","hostname","onopen","onmessage","message","jsonData","JSON","parse","data","toString","Command","onerror","error","onclose","setTimeout","fetchData","close","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/syucedag/Desktop/all_projects/sevda/mygit/testApplication/frontend/src/Components/WebSocketComponent/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoadingProduct from \"../../assets/icons/loadingProduct.svg\";\r\nimport {useMessage} from '../../Components/MessageContext';\r\n\r\nconst WebSocketComponent = () => {\r\n  const [isConnecting, setIsConnecting] = useState(true);\r\n  const { socket, setSocket } = useMessage();\r\n  const { networkjsonString, setNetworkPriority } = useMessage();\r\n  const { fourGSettingsString, setfourGSettingsString } = useMessage();\r\n  const { ethernetSettingsString, setethernetSettingsString } = useMessage();\r\n  const { DNSSettingsString, setDNSSettingsString } = useMessage();\r\n  const { WifiSettingsString, setWifiSettingsString } = useMessage();\r\n  const { OcppSettingsString, setOcppSettingsString } = useMessage();\r\n  const { FunctionsSettingsString, setFunctionsSettingsString } = useMessage();\r\n  const { TimeZoneSettingsString, setTimeZoneSettingsString } = useMessage();\r\n  const { BluetoothSettingsString, setBluetoothSettings } = useMessage();\r\n  const { GetVersionString, setGetVersionString } = useMessage();\r\n  const { ChargingString, setChargingString } = useMessage();\r\n  const { DeviceStatusString, setDeviceStatusString } = useMessage();\r\n  const { ACCurrentString, setACCurrentString } = useMessage();\r\n  const { MidMeterString, setMidMeterString } = useMessage();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const connectWebSocket = () => {\r\n    console.log(\"Web\", isConnecting)\r\n    // if (isConnecting) return;\r\n\r\n    setIsConnecting(true);\r\n\r\n    // const newSocket = new W3CWebSocket('ws://' + \"100.103.66.88\" + ':8000');\r\n\r\n    const newSocket = new W3CWebSocket('ws://' + window.location.hostname + ':8000');\r\n\r\n    newSocket.onopen = () => {\r\n      console.log(\"WebSocket bağlantısı kuruldu.\");\r\n      navigate(\"\");\r\n      setSocket(newSocket);\r\n      setIsConnecting(false);\r\n    };\r\n\r\n    newSocket.onmessage = (message) => {\r\n      const jsonData = JSON.parse(message.data.toString());\r\n      console.log(jsonData);\r\n      switch (jsonData.Command) {\r\n        case \"NetworkPriority\":\r\n          setNetworkPriority(message.data.toString());\r\n          break\r\n        case \"4GSettings\":\r\n          setfourGSettingsString(message.data.toString());\r\n          break\r\n        case \"EthernetSettings\":\r\n          setethernetSettingsString(message.data.toString());\r\n          break\r\n        case \"DNSSettings\":\r\n          setDNSSettingsString(message.data.toString());\r\n          break;\r\n        case \"WifiSettings\":\r\n          setWifiSettingsString(message.data.toString());\r\n          break;\r\n        case \"OcppSettings\":\r\n          setOcppSettingsString(message.data.toString());\r\n          break;\r\n        case \"FunctionsEnable\":\r\n          setFunctionsSettingsString(message.data.toString());\r\n          break;\r\n        case \"BluetoothSettings\":\r\n          setBluetoothSettings(message.data.toString());\r\n          break;\r\n        case \"TimeZoneSettings\":\r\n          setTimeZoneSettingsString(message.data.toString());\r\n          break;\r\n        case \"FirmwareVersion\":\r\n          setGetVersionString(message.data.toString());\r\n          break;\r\n        case \"Charging\":\r\n          setChargingString(message.data.toString())\r\n          break;\r\n        case \"DeviceStatus\":\r\n          setDeviceStatusString(message.data.toString())\r\n          break;\r\n        case \"ACCurrent\":\r\n          setACCurrentString(message.data.toString())\r\n          break;\r\n        case \"MidMeter\":\r\n          setMidMeterString(message.data.toString())\r\n        }\r\n    \r\n    };\r\n\r\n    newSocket.onerror = (error) => {\r\n      console.error(\"WebSocket hatası:\", error);\r\n    };\r\n\r\n    newSocket.onclose = () => {\r\n      console.log(\"WebSocket bağlantısı kapatıldı.\");\r\n      setSocket(null);\r\n      setIsConnecting(false);\r\n\r\n      setTimeout(() => {\r\n        connectWebSocket();\r\n      }, 1000);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log(\"connectWebSocket...\")\r\n        connectWebSocket();\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => {\r\n      if (socket) {\r\n        console.log(\"WebSocket bağlantısı kapatıldı.\");\r\n        socket.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}